<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.5">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="SaumyaRealtor" enabled="true">
      <stringProp name="TestPlan.comments">This test plan was created by the BlazeMeter converter v.3.1.23. Please contact support@blazemeter.com for further support.</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="sec-ch-ua" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua</stringProp>
            <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;111&quot;, &quot;Not(A:Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;111&quot;</stringProp>
          </elementProp>
          <elementProp name="sec-ch-ua-mobile" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
            <stringProp name="Header.value">?0</stringProp>
          </elementProp>
          <elementProp name="sec-ch-ua-platform" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
            <stringProp name="Header.value">&quot;macOS&quot;</stringProp>
          </elementProp>
          <elementProp name="User-Agent" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/111.0.0.0 Safari/537.36</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="BASE_URL_1" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_1</stringProp>
            <stringProp name="Argument.value">www.realtor.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain"></stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <boolProp name="HTTPSampler.image_parser">true</boolProp>
        <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <DNSCacheManager guiclass="DNSCachePanel" testclass="DNSCacheManager" testname="DNS Cache Manager" enabled="true">
        <collectionProp name="DNSCacheManager.servers"/>
        <boolProp name="DNSCacheManager.clearEachIteration">true</boolProp>
        <boolProp name="DNSCacheManager.isCustomResolver">false</boolProp>
      </DNSCacheManager>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
        <collectionProp name="AuthManager.auth_list"/>
        <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
      </AuthManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">false</boolProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">100</stringProp>
        <stringProp name="ThreadGroup.ramp_time">30</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">60</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Test" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.realtor.com/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 0 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.realtor.com/api/v1/global-header/content/navigation" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;areaType&quot;:&quot;city&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/global-header/content/navigation</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="tracestate" elementType="Header">
                  <stringProp name="Header.name">tracestate</stringProp>
                  <stringProp name="Header.value">1022681@nr=0-1-378584-798919451-764368049a29043a----1679978577367</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-6985cbf40e323b94aa9d37bce095a8a0-764368049a29043a-01</stringProp>
                </elementProp>
                <elementProp name="newrelic" elementType="Header">
                  <stringProp name="Header.name">newrelic</stringProp>
                  <stringProp name="Header.value">eyJ2IjpbMCwxXSwiZCI6eyJ0eSI6IkJyb3dzZXIiLCJhYyI6IjM3ODU4NCIsImFwIjoiNzk4OTE5NDUxIiwiaWQiOiI3NjQzNjgwNDlhMjkwNDNhIiwidHIiOiI2OTg1Y2JmNDBlMzIzYjk0YWE5ZDM3YmNlMDk1YThhMCIsInRpIjoxNjc5OTc4NTc3MzY3LCJ0ayI6IjEwMjI2ODEifX0=</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.realtor.com/api/v1/nearby_areas?geoSupportedSlug=El-Paso_TX&amp;dataFilter=City&amp;limit=6&amp;geo_search_type=city" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="dataFilter" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dataFilter</stringProp>
                  <stringProp name="Argument.value">City</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="geo_search_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">geo_search_type</stringProp>
                  <stringProp name="Argument.value">city</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="geoSupportedSlug" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">geoSupportedSlug</stringProp>
                  <stringProp name="Argument.value">El-Paso_TX</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="limit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">limit</stringProp>
                  <stringProp name="Argument.value">6</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/nearby_areas</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="tracestate" elementType="Header">
                  <stringProp name="Header.name">tracestate</stringProp>
                  <stringProp name="Header.value">1022681@nr=0-1-378584-798919451-10b6593cf4e9f313----1679978577368</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-77cf57c3914e45e98c20ac4e5dccd000-10b6593cf4e9f313-01</stringProp>
                </elementProp>
                <elementProp name="newrelic" elementType="Header">
                  <stringProp name="Header.name">newrelic</stringProp>
                  <stringProp name="Header.value">eyJ2IjpbMCwxXSwiZCI6eyJ0eSI6IkJyb3dzZXIiLCJhYyI6IjM3ODU4NCIsImFwIjoiNzk4OTE5NDUxIiwiaWQiOiIxMGI2NTkzY2Y0ZTlmMzEzIiwidHIiOiI3N2NmNTdjMzkxNGU0NWU5OGMyMGFjNGU1ZGNjZDAwMCIsInRpIjoxNjc5OTc4NTc3MzY4LCJ0ayI6IjEwMjI2ODEifX0=</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.realtor.com/api/v1/niq-suggest?client_id=rdc-home&amp;slugId=El-Paso_TX" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="slugId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">slugId</stringProp>
                  <stringProp name="Argument.value">El-Paso_TX</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="client_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client_id</stringProp>
                  <stringProp name="Argument.value">rdc-home</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/niq-suggest</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="tracestate" elementType="Header">
                  <stringProp name="Header.name">tracestate</stringProp>
                  <stringProp name="Header.value">1022681@nr=0-1-378584-798919451-d6c2f3132ce937b4----1679978577426</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-ac330ab7479f52cc7f20c675cf5bc230-d6c2f3132ce937b4-01</stringProp>
                </elementProp>
                <elementProp name="newrelic" elementType="Header">
                  <stringProp name="Header.name">newrelic</stringProp>
                  <stringProp name="Header.value">eyJ2IjpbMCwxXSwiZCI6eyJ0eSI6IkJyb3dzZXIiLCJhYyI6IjM3ODU4NCIsImFwIjoiNzk4OTE5NDUxIiwiaWQiOiJkNmMyZjMxMzJjZTkzN2I0IiwidHIiOiJhYzMzMGFiNzQ3OWY1MmNjN2YyMGM2NzVjZjViYzIzMCIsInRpIjoxNjc5OTc4NTc3NDI2LCJ0ayI6IjEwMjI2ODEifX0=</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.realtor.com/api/v1/niq-suggest?client_id=rdc-home&amp;slugId=El-Paso_TX" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="slugId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">slugId</stringProp>
                  <stringProp name="Argument.value">El-Paso_TX</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="client_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client_id</stringProp>
                  <stringProp name="Argument.value">rdc-home</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/niq-suggest</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="tracestate" elementType="Header">
                  <stringProp name="Header.name">tracestate</stringProp>
                  <stringProp name="Header.value">1022681@nr=0-1-378584-798919451-c1633864ef61aa47----1679978577429</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-05e8742b6d1da0b7836661f81b49ab20-c1633864ef61aa47-01</stringProp>
                </elementProp>
                <elementProp name="newrelic" elementType="Header">
                  <stringProp name="Header.name">newrelic</stringProp>
                  <stringProp name="Header.value">eyJ2IjpbMCwxXSwiZCI6eyJ0eSI6IkJyb3dzZXIiLCJhYyI6IjM3ODU4NCIsImFwIjoiNzk4OTE5NDUxIiwiaWQiOiJjMTYzMzg2NGVmNjFhYTQ3IiwidHIiOiIwNWU4NzQyYjZkMWRhMGI3ODM2NjYxZjgxYjQ5YWIyMCIsInRpIjoxNjc5OTc4NTc3NDI5LCJ0ayI6IjEwMjI2ODEifX0=</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.realtor.com/api/v1/single_feeds" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;member_id&quot;:&quot;044dd858-7431-4b1f-ac2f-8cdeb9fcd3ec&quot;,&quot;visitor_id&quot;:&quot;044dd858-7431-4b1f-ac2f-8cdeb9fcd3ec&quot;,&quot;last_visit_date&quot;:&quot;2023-02-26T04:42:57.440Z&quot;,&quot;recently_viewed&quot;:[&quot;7221794636&quot;],&quot;module_type&quot;:&quot;recommended_homes&quot;,&quot;limit&quot;:1000}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/single_feeds</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="tracestate" elementType="Header">
                  <stringProp name="Header.name">tracestate</stringProp>
                  <stringProp name="Header.value">1022681@nr=0-1-378584-798919451-0d2c300affca1eb4----1679978577440</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-a39594d2a0187e8e02edb367f8fd1b00-0d2c300affca1eb4-01</stringProp>
                </elementProp>
                <elementProp name="newrelic" elementType="Header">
                  <stringProp name="Header.name">newrelic</stringProp>
                  <stringProp name="Header.value">eyJ2IjpbMCwxXSwiZCI6eyJ0eSI6IkJyb3dzZXIiLCJhYyI6IjM3ODU4NCIsImFwIjoiNzk4OTE5NDUxIiwiaWQiOiIwZDJjMzAwYWZmY2ExZWI0IiwidHIiOiJhMzk1OTRkMmEwMTg3ZThlMDJlZGIzNjdmOGZkMWIwMCIsInRpIjoxNjc5OTc4NTc3NDQwLCJ0ayI6IjEwMjI2ODEifX0=</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="feps_version" elementType="Header">
                  <stringProp name="Header.name">feps_version</stringProp>
                  <stringProp name="Header.value">v2</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.realtor.com/api/v1/browse_modules_hestia?limit=4&amp;client_id=rdc-home&amp;types=new_listings_for_sale&amp;types=price_reduced_for_sale&amp;types=open_houses_for_sale&amp;types=location_recently_sold&amp;types=new_constructions_for_sale&amp;types=new_communities&amp;types=land_for_sale&amp;types=foreclosure_for_sale&amp;types=condos_for_sale&amp;types=senior_communities_for_sale&amp;types=nearby_25_for_sale&amp;types=nearby_50_for_sale&amp;feps_version=v2&amp;postal_code=&amp;city=El%20Paso&amp;state_code=TX&amp;base_query=listing_collections" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="types" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">types</stringProp>
                  <stringProp name="Argument.value">nearby_50_for_sale</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="city" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">city</stringProp>
                  <stringProp name="Argument.value">El Paso</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="limit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">limit</stringProp>
                  <stringProp name="Argument.value">4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="base_query" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">base_query</stringProp>
                  <stringProp name="Argument.value">listing_collections</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="postal_code" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">postal_code</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="state_code" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">state_code</stringProp>
                  <stringProp name="Argument.value">TX</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="feps_version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">feps_version</stringProp>
                  <stringProp name="Argument.value">v2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="client_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client_id</stringProp>
                  <stringProp name="Argument.value">rdc-home</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/browse_modules_hestia</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="tracestate" elementType="Header">
                  <stringProp name="Header.name">tracestate</stringProp>
                  <stringProp name="Header.value">1022681@nr=0-1-378584-798919451-9d5dd0533f1e8697----1679978577440</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-963f7eaf753688c722c73e054d8fecb0-9d5dd0533f1e8697-01</stringProp>
                </elementProp>
                <elementProp name="newrelic" elementType="Header">
                  <stringProp name="Header.name">newrelic</stringProp>
                  <stringProp name="Header.value">eyJ2IjpbMCwxXSwiZCI6eyJ0eSI6IkJyb3dzZXIiLCJhYyI6IjM3ODU4NCIsImFwIjoiNzk4OTE5NDUxIiwiaWQiOiI5ZDVkZDA1MzNmMWU4Njk3IiwidHIiOiI5NjNmN2VhZjc1MzY4OGM3MjJjNzNlMDU0ZDhmZWNiMCIsInRpIjoxNjc5OTc4NTc3NDQwLCJ0ayI6IjEwMjI2ODEifX0=</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="feps_version" elementType="Header">
                  <stringProp name="Header.name">feps_version</stringProp>
                  <stringProp name="Header.value">v2</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.realtor.com/rdc_user_check/xhr/api/v2/collector" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="vid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">vid</stringProp>
                  <stringProp name="Argument.value">de4e4210-b810-11ed-b9e4-636f754f7658</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pc</stringProp>
                  <stringProp name="Argument.value">5829844687790118</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="cts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">cts</stringProp>
                  <stringProp name="Argument.value">de4e50c7-b810-11ed-b9e4-636f754f7658</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="rsc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">rsc</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="payload" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">payload</stringProp>
                  <stringProp name="Argument.value">aUkQRhAIEGJqAwACCwcQHhBWEAhJEGJqAwMEBgcQCBBaRkZCQQgdHUVFRRxAV1NeRl1AHFFdXx0QHhBiagMAAAIFEAgCHhBiagMABgcKEAgQf1NRe1xGV14QHhBiagMDCwIAEAgCHhBiagMDBwQCEAgDCgMHHhBiagGMAAA^YKEAgBBAICHhBiagMDAQoHEAgDBAUS}LCwUKBDNKwUFBAUDHh8BiDagMAANAoCEAgDBAULCwaUKBwUFBAUFHhBiagMDBgsEE&gt;AgQAgECBQNTBADIfUVY`AAR8DA1dWHwpUCwIfBVAAVwoEBFRXUFYAEB4QYmoKDAAcE}BGKhAIXEdeXh4QYmoDAAcEBxAIHwMeE7GJ7qAwMBBQsQCEZAR1dPT28=</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="appId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">appId</stringProp>
                  <stringProp name="Argument.value">PX41V9jz72</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="en" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">en</stringProp>
                  <stringProp name="Argument.value">NTA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tag" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tag</stringProp>
                  <stringProp name="Argument.value">v8.4.4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="uuid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">uuid</stringProp>
                  <stringProp name="Argument.value">03071a60-cd23-11ed-8f90-7b2e866febd2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ft" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ft</stringProp>
                  <stringProp name="Argument.value">302</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="seq" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">seq</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sid</stringProp>
                  <stringProp name="Argument.value">f08c9fe9-cd22-11ed-bccf-6f586e716e58</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">rdc_user_check/xhr/api/v2/collector</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="tracestate" elementType="Header">
                  <stringProp name="Header.name">tracestate</stringProp>
                  <stringProp name="Header.value">1022681@nr=0-1-378584-798919451-fbf93e13270378c5----1679978577678</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-81f2531251526af3fce635c77c410e30-fbf93e13270378c5-01</stringProp>
                </elementProp>
                <elementProp name="newrelic" elementType="Header">
                  <stringProp name="Header.name">newrelic</stringProp>
                  <stringProp name="Header.value">eyJ2IjpbMCwxXSwiZCI6eyJ0eSI6IkJyb3dzZXIiLCJhYyI6IjM3ODU4NCIsImFwIjoiNzk4OTE5NDUxIiwiaWQiOiJmYmY5M2UxMzI3MDM3OGM1IiwidHIiOiI4MWYyNTMxMjUxNTI2YWYzZmNlNjM1Yzc3YzQxMGUzMCIsInRpIjoxNjc5OTc4NTc3Njc4LCJ0ayI6IjEwMjI2ODEifX0=</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.realtor.com/api/v1/search_count_hestia" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;queries&quot;:[{&quot;city&quot;:&quot;El Paso&quot;,&quot;state_code&quot;:&quot;TX&quot;,&quot;list_date&quot;:{&quot;min&quot;:&quot;2023-03-13&quot;},&quot;status&quot;:[&quot;for_sale&quot;,&quot;ready_to_build&quot;],&quot;primary&quot;:true},{&quot;city&quot;:&quot;Horizon City&quot;,&quot;state_code&quot;:&quot;TX&quot;},{&quot;city&quot;:&quot;Socorro&quot;,&quot;state_code&quot;:&quot;TX&quot;},{&quot;city&quot;:&quot;Santa Teresa&quot;,&quot;state_code&quot;:&quot;NM&quot;},{&quot;city&quot;:&quot;Sunland Park&quot;,&quot;state_code&quot;:&quot;NM&quot;},{&quot;city&quot;:&quot;Clint&quot;,&quot;state_code&quot;:&quot;TX&quot;},{&quot;city&quot;:&quot;Anthony&quot;,&quot;state_code&quot;:&quot;NM&quot;}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/search_count_hestia</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="tracestate" elementType="Header">
                  <stringProp name="Header.name">tracestate</stringProp>
                  <stringProp name="Header.value">1022681@nr=0-1-378584-798919451-71eafc733f6e7a9f----1679978578255</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-c378bd23e9a402cb3060fb32b0efd840-71eafc733f6e7a9f-01</stringProp>
                </elementProp>
                <elementProp name="newrelic" elementType="Header">
                  <stringProp name="Header.name">newrelic</stringProp>
                  <stringProp name="Header.value">eyJ2IjpbMCwxXSwiZCI6eyJ0eSI6IkJyb3dzZXIiLCJhYyI6IjM3ODU4NCIsImFwIjoiNzk4OTE5NDUxIiwiaWQiOiI3MWVhZmM3MzNmNmU3YTlmIiwidHIiOiJjMzc4YmQyM2U5YTQwMmNiMzA2MGZiMzJiMGVmZDg0MCIsInRpIjoxNjc5OTc4NTc4MjU1LCJ0ayI6IjEwMjI2ODEifX0=</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.realtor.com/rdc_user_check/xhr/api/v2/collector" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="cts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">cts</stringProp>
                  <stringProp name="Argument.value">de4e50c7-b810-11ed-b9e4-636f754f7658</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rsc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">rsc</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="en" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">en</stringProp>
                  <stringProp name="Argument.value">NTA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uuid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">uuid</stringProp>
                  <stringProp name="Argument.value">03071a60-cd23-11ed-8f90-7b2e866febd2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ft" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ft</stringProp>
                  <stringProp name="Argument.value">302</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sid</stringProp>
                  <stringProp name="Argument.value">f08c9fe9-cd22-11ed-bccf-6f586e716e58ó &#x84;±ó &#x84;¶ó &#x84;·ó &#x84;¹ó &#x84;¹ó &#x84;·ó &#x84;¸ó &#x84;µó &#x84;·ó &#x84;¸ó &#x84;°ó &#x84;²ó &#x84;°</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">cs</stringProp>
                  <stringProp name="Argument.value">acb9ed1d20269debc51533f23a91a77b90011f5591384e557cd36cc0e88eede4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="vid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">vid</stringProp>
                  <stringProp name="Argument.value">de4e4210-b810-11ed-b9e4-636f754f7658</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pc</stringProp>
                  <stringProp name="Argument.value">3417064665647077</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="payload" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">payload</stringProp>
                  <stringProp name="Argument.value">aUkQRhAIEGJqAwMHCwIQHhBWEAhJEGJqAwMGAQMQCAMEBQsLBQoHBQoCAAIeEGJqAwABAQIQCBADAgtOBAROBAROBQJOCgIQHhBiagMDBQIHEAgDAAceEGJqAwMLAQoQCEZAR1ceEGJqAwMEAgAQCEZAR1ceEGJqAwACAAMQCBBUU15BVxAeEGJqAwAGAAMQCBBUU15BVxAeEGJqAwADAAYQCAMeEGJqAwMEAgsQCAMeEGJqAwAACwMQCBAQHhBiagMDCgoDEAhpEF5dU1ZmW19XQRAeEFFBWxAeEFNCQhBvHhBiagMABwcDEAgQWkZGQkEIEB4QYmoDAAcHARAIEHNBW1MdcVNeUUdGRlMQHhBiagMABwQFEAgQRQFREB4QYmoDAAcFBBAIEEFRQFdXXBAeEGJqAwAHBwcQCEkQQl5HVVdKRhAISRACEAhJEFQQCBBbXEZXQFxTXh9CVlQfRFtXRVdAEB4QXBAIEGJ2dBJkW1dFV0AQTx4QAxAISRBUEAgQW1xGV0BcU14fQlZUH0RbV0VXQBAeEFwQCBBxWkBdX1cSYnZ0EmRbV0VXQBBPHhAAEAhJEFQQCBBbXEZXQFxTXh9CVlQfRFtXRVdAEB4QXBAIEHFaQF1fW0dfEmJ2dBJkW1dFV0AQTx4QARAISRBUEAgQW1xGV0BcU14fQlZUH0RbV0VXQBAeEFwQCBB/W1FAXUFdVEYSd1ZVVxJidnQSZFtXRVdAEE8eEAYQCEkQVBAIEFtcRldAXFNeH0JWVB9EW1dFV0AQHhBcEAgQZVdQeVtGElBHW15GH1tcEmJ2dBBPTx4QQl5HVVtcQW1eV1wQCAdPHhBiagMABwoBEAhJEEFfVhAISRBdWRAIRkBHVx4QV0oQCFRTXkFXT08eEGJqAwAHBQoQCElPHhBiagMABwcKEAhGQEdXHhBiagMABwQEEAhUU15BVx4QYmoDAAcFAxAIEFNRUAYAVlcLEB4QYmoDAAcFCxAISRBBR0JCXUBGEAhGQEdXHhBBRlNGR0EQCEkQV1RUV1FGW0RXZktCVxAIEAZVEB4QQEZGEAgHAh4QVl1FXF5bXFkQCAMCHhBBU0RXdlNGUxAIVFNeQVdPTx4QYmoDAAcKAxAIEFZXVFNHXkYQHhBiagMABwoAEAgBHhBiagMAAAIFEAgCHhBiagMDBwEKEAgAHhBiagMDCwoGEAgQZktCV3dAQF1ACBJxU1xcXUYSQFdTVhJCQF1CV0BGW1dBEl1UElxHXl4SGkBXU1ZbXFUSFQIVG25cEhISElNGEkVXEhpaRkZCQQgdHUVFRRxAV1NeRl1AHFFdXx1AVlFtR0FXQG1RWldRWR1bXFtGHFhBCAAIAAMCAAsbblwSEhISU0YSW10SGlpGRkJBCB0dRUVFHEBXU15GXUAcUV1fHUBWUW1HQVdAbVFaV1FZHVtcW0YcWEEIAAgEBQsDBxtuXBISEhJTRhJLXRIaWkZGQkEIHR1FRUUcQFdTXkZdQBxRXV8dQFZRbUdBV0BtUVpXUVkdW1xbRhxYQQgACAUHAAMGG25cEhISElNGElpGRkJBCB0dRUVFHEBXU15GXUAcUV1fHUBWUW1HQVdAbVFaV1FZHVtcW0YcWEEIAAgFAwILAW5cEhISElNGElxAZUBTQkJXQBIaWkZGQkEIHR1FRUUcQFdTXkZdQBxRXV8dCAEIAAQBAgsbEB4QYmoDAwQGBxAIEFpGRkJBCB0dRUVFHEBXU15GXUAcUV1fHRAeEGJqAwMHCwUQCGlvHhBiagMAAgABEAgQEB4QYmoDAwEBBRAIVFNeQVceEGJqAwMKBgEQCAMGBgIeEGJqAwMFCgMQCAsCAh4QYmoDAAMAAxAIAwYGAh4QYmoDAAMAChAIBQsFHhBiagMAAQoFEAgQAwYGAmoLAgIQHhBiagMAAgIBEAgBAh4QYmoDAwEKAhAIAQIeEGJqAwMGCwYQCAMGBgIeEGJqAwAGAwMQCAQFCx4QYmoDAAYGARAIAh4QYmoDAAYGBRAIAAMKChwHHhBiagMDBwEBEAhGQEdXHhBiagMAAgULEAhUU15BVx4QYmoDAAAFChAIRkBHVx4QYmoDAwQLBhAIVFNeQVceEGJqAwAACwYQCFRTXkFXHhBiagMABwMGEAhGQEdXHhBiagMABwMHEAgQZktCV3dAQF1ACBJxU1xcXUYSQFdTVhJCQF1CV0BGW1dBEl1UEkdcVldUW1xXVhIaQFdTVltcVRIVRVtWRloVGxAeEGJqAwAHAwQQCBBFV1BZW0YQHhBiagMABwMFEAgBAR4QYmoDAAcDChAIVFNeQVceEGJqAwAHBgcQCFRTXkFXHhBiagMDBwELEAgQBAYHBwRRBQUQHhBiagMDBwAKEAgQEB4QYmoDAAAFAxAIEAMCAAIFUABUEB4QYmoDAwoGCxAIEAMCAAIFUABUEB4QYmoDAAYEBhAIEAsCVwQHBgQHEB4QYmoDAwEHBBAIRkBHVx4QYmoDAAYABBAIRkBHVx4QYmoDAwULAxAIRkBHVx4QYmoDAwcDBRAIRkBHVx4QYmoDAAcAAhAIRkBHVx4QYmoDAAcABhAIEAZrcQMGa3FWBmtxVgZrcWQGa3FXBmtxagZrdWEHeAAHBFNHQQVAAAQEa1N7B11xYAVAAAUQHhBiagMABwAFEAgQUwECA1RWA1cAU1EEBVMDAFRTBgdUVlZXUAUEVwYKBwMQHhBiagMAAAQCEAgQf11IW15eUx0HHAISGn9TUVtcRl1BWgkSe1xGV14Sf1NREn1hEmoSAwJtAwdtBRsSc0JCXldlV1B5W0YdBwEFHAEEEhp5emZ/fh4SXltZVxJ1V1FZXRsScVpAXV9XHQMDAxwCHAIcAhJhU1RTQFsdBwEFHAEEEB4QYmoDAAAGCxAIVFNeQVceEGJqAwMKCwUQCBALAlcEBwYEBxAeEGJqAwMHAAsQCAMABQQFAAQHCh4QYmoDAwcHBxAIAAMFAAQGCwYFAB4QYmoDAwoBARAIAwYKCwYKAwIEHhBiagMDCgYCEAgQZkdXEn9TQBIAChIAAgABEgMCCAMACAcLEnV/ZhkCBwECEhp7XFZbUxJhRlNcVlNAVhJmW19XGxAeEGJqAwMHAAQQCFRTXkFXHhBiagMDBAoGEAhUU15BVx4QYmoDAwoDABAIVFNeQVceEGJqAwABAQcQCEZAR1ceEGJqAwACCgIQCAIeEGJqAwMEBQoQCFRTXkFXHhBiagMDAQYLEAgQRFtBW1BeVxAeEGJqAwABCwUQCFRTXkFXHhBiagMDAQoFEAgCHhBiagMAAwcCEAgDBgYCHhBiagMAAQIGEAhGQEdXHhBiagMDBAcDEAgFCwIeEGJqAwMKBAUQCBBfW0FBW1xVEB4QYmoDAAAHBhAIVFNeQVceEGJqAwMHBgIQCEZAR1ceEGJqAwMHBgoQCFRTXkFXHhBiagMDBgYEEAhGQEdXHhBiagMABwcCEAgDHhBiagMABgEDEAgCHhBiagMDCwsDEAgBHhBiagMDCgEFEAgGAh4QYmoDAwQBABAIAh4QYmoDAwYCCxAIAx4QYmoDAAcFARAIEAMBAlZQEB4QYmoDAAcGBhAIRkBHVx4QYmoDAwcABhAIRkBHVx4QYmoDAwUCAxAIEAABBgYDAwMFBAoEBQcGAQIEAQABEB4QAgMEBAEBAQcGCAYHBQQDAAYDAgMQCBABAAcHAgICBAULBQQGBwADBQABABAeEGJqAwAGBwYQCAsGAQEeEGJqAwAHAQcQCFRTXkFXHhBiagMDAQIBEAhUU15BVx4QYmoDAwcDBxAIVFNeQVceEGJqAwADAQEQCFRTXkFXHhBiagMAAQYCEAhUU15BVx4QYmoDAwUBChAIVFNeQVceEGJqAwMFAAEQCFRTXkFXHhBiagMDAQoLEAhUU15BVx4QYmoDAwoBCxAIVFNeQVceEGJqAwMGBAIQCFRTXkFXHhBiagMAAwIAEAhUU15BVx4QYmoDAwEFChAIVFNeQVceEGJqAwABAwUQCFRTXkFXHhBiagMDCgIGEAgQB1EHUFFQBVcEBQMEBQoCVgMFAVECBFcLUVNUBAEHBVcQHhBiagMAAwMKEAgQUVVaBQJZWFgKAkRaAAVTB1VHU1UQHhBiagMDBQYEEAgQA1FQBQsHBAcDBwoEAAQAC1FXUwdWVAELA1QGCwoHAwcQHhBiagMDAQUDEAgQA1ZTVFZXAVcLVldRCwZWVwVQC1MFCgQFU1YLUFRUBlEQHhBiagMABwIDEAgQAlNWBQUHC1ACAwZRVwAEAFBWUwcCAAEGUwRXUANWCwYQHhBiagMDBwIKEAgQBgtXBwIKBlcQHhBiagMDBgcAEAgQBgIEBVEDAFYGQHhBiagMAAAMKEAgQBAdWCgAEVwIQHhBiagMABgoDEAgQUwsABAtXAgIQHhBiagMDBQoCEAgQBwJTB1dRBwcQHhBiagMAAgQLEAhpEGJ2dBJkW1dFV0AQHhBxWkBdX1cSYnZ0EmRbV0VXQBAeEHFaQF1fW0^dfEmJ2dBJkW1dFV0AQHhB/W1FAXUFdVEYSd1ZVVxJidnQSZFtXRVdAEB4QZVdQeVtGElBHW15GH1tcEmJ2dBBvHhBiagMAAAoEEAgHHhBiagMDBwUEEAhGQEdXHhBiagMAAQMKEAhGQEdXHhBiagMDAQoGEAhGQEdXHhBiagMDCgoEEAhGQEdXHhBiagMDBwoBEAgQV1wfdXAQHhBiagMABgcKEAgQf1NRe1xGV14QHhBiagMDBAoDEAhpEFdcH3VwEB4QV1wfZ2EQHhBXXBBvHhBiagMDBQcGEAgQf11IW15eUx0HHAISGn9TUVtcRl1BWgkSe1xGV14Sf1NREn1hEmoSAwJtAwdtBRsSc0JCXldlV1B5W0YdBwEFHAEEEhp5emZ/fh4SXltZVxJ1V1FZXRsScVpAXV9XHQMDAxwCHAIcAhJhU1RTQFsdBwEFHAEEEB4QYmoDAAIBBRAIRkBHVx4QYmoDAwELAhAIHwEBAh4QYmoDAwQAAxAICh4QYmoDAwQHBRAIAR4QYmoDAAIKAxAIEHVXUVldEB4QYmoDAwsCChAIEAACAgECAwIFEB4QYmoDAAEDBhAIEAccAhIaf1NRW1xGXUFaCRJ7XEZXXhJ/U1ESfWESahIDAm0DB20FGxJzQkJeV2VXUHlbRh0HAQUcAQQSGnl6Zn9 HhJeW1lXEnVXUVldGxJxWkBdX1cdAwMDHAIcAhwCEmFTVFNAWx0HAQUcAQQQHhBiagMDCgALEAhGQEdXHhBiagMDBgQGEAhGQEdXHS9hBiagMAAgcGEAgAHhBiagMDCgADEAgQfFdGQVFTQlcQHhBiagMDBgULEAgQf11IW15eUxAeEGJqAwMEBQYQCEZAR1ceEGJqAwAABgMQCAcCHhBiagMDAQUAEAhUU15BVx4QYmoDAwQKARAIAwIeEGJqAwMHBAMQCBAGVRAeEGJqAwMKBQUQCEZAR1ceEGJqAwADAgIQCEZAR1ceEGJqAwAHAgQQCBBTQF8QHhBiaE^agMABwIFEAgQBAYQHhBiagMABwIKEAhpSRBQQFNcVhAIEHVdXVVeVxJxWkBdX1cQHhBEV0BBW11cEAgQAwMDEE8eSRBQQFNcVhAIEHxdRhpzCHBAU1xWEB4QRFdAQVtdXBAIEAoQTx5JEFBAU1xWEAgQcVpAXV9bR18QHhBEV0BBW11cEAgQAwMDEE9vHhBiagMABwILEAhUU15BVx4QYmoDAAcDAhAIEBAeEGJqAwAHAwMQCBBfU1F9YRAeEGJqAwAHAwAQCBADARwAHAMQHhBiagMABwMBEAgQAwMDHAIcBwcEARwEBh9AeEGJqAwAHBgoQCEZAR1ceEGJqAwAHBgsQCEZAR1ceEGJqAwADBAsQCAAeEGJqAwMBAAIQCAACAgIEeEGJqAwMLAgAQCAMeEGJqAwMHBAIQCAYDBgIeEGJqAwMBAQAQCAMEBQsLBQoHBQULBQUeEGJqAwAABgoQCAEEAgIeEGJqAwMBCgcQCAMEBQsLBQoHBQUEBQMeEGJqAwAACgIQCAMEBQsLBQoHCgICCgUeEGNJqAwMGCwQQCBACAQIFA1MEAh9RVgABHwMDV1YfClQLAh8FUABXCgQEVFdQVgAQHhBiagMABwQGEAhcR15eHhBiagMABwQHEAgfAx4QYmoDAwEFCxAIRkBHV09PHkkQRhAIEGJqAwMHBgUQHhBWEAhJEGJqAwAGCwAQCBBRBwIHUQMCVwAEUwNQBVMFBQYDBgEFVlALVAoACwMEUBAeEGJqAwAHBQIQCBAECgZUCgQCAgFXCwAFAAVRClMHBAoFVAALAgpRAVcFCxAeEGJqAwMBBwAQCBBXAgoLU1MBVgUCAlMBB1ZTBQAGBlZWBlZTBVMEClQLURAeEGJqAwAACwAQCBBlV1B5W0YQHhBiagMDCgMDEAhpbx4QYmoDAwcEBRAIEGV_XUHlbRhJlV1B1fhAeEGJqAwACAQAQCBBlV1B1fhIDHAISGn1CV1x1fhJ3YRIAHAIScVpAXV9bR18bEB4QYmoDAwcBBBAIaRBzfHV d21bXEFGU1xRV1ZtU0BAU0tBEB4Qd2pmbVBeV1xWbV9bXF9TShAeEHdqZm1RXV5dQG1QR1RUV0BtWlNeVG1UXl1TRhAeEHdqZm1WW0FYXVtcRm1GW19XQG1DR1dASxAeEHdqZm1UXl1TRm1QXldcVhAeEHdqZm1UQFNVbVZXQkZaEB4Qd2pmbUFaU1ZXQG1GV0pGR0BXbV5dVhAeEHdqZm1GV0pGR0BXbVFdX0JAV0FBW11cbUBVRlEQHhB3amZtRldKRkdAV21UW15GV0BtU1xbQV1GQF1CW1EQHhB3amZtQWB1cBAeEHl6YG1CU0BTXl5XXm1BWlNWV0BtUV1fQlteVxAeEH13YW1XXldfV1xGbVtcVldKbUdbXEYQHhB9d2FtVFBdbUBXXFZXQG1fW0JfU0IQHhB9d2FtQUZTXFZTQFZtVldAW0RTRltEV0EQHhB9d2FtRldKRkdAV21UXl1TRhAeEH13YW1GV0pGR0BXbVReXVNGbV5bXFdTQBAeEH13YW1GV09pGR0BXbVpTXlRtVF5dU0YQHhB9d2FtRldKRkdAV21aU15UbVReXVNGbV5bXFdTQBAeEH13YW1EV0BGV0ptU0BAU0ttXVBYV1FGEB4QZXdwdX5tUV1eXUBtUEdUVFdAbVReXVNGEB4QZXdwdX5tUV1fQkBXQUFXVm1GV0pGR0BXbUEBRlEQHhBld3B1fm1RXV9CQFdBQVdWbUZXSkZHQFdtQQFGUW1BQFVQEB4QZXdwdX5tVldQR1VtQFdcVldAV0BtW1xUXRAeEGV3cHV bVZXUEdVbUFaU1ZXQEEQHhBld3B1fm1WV0JGWm1GV0pGR0BXEB4QZXdwdX5tVkBTRW1QR1RUV0BBEB4QZXdwdX5tXl1BV21RXVxGV0pGEB4QZXdwdX5EtX0deRlttVkBTRRBvHhBiagMAAwYLEAhpEGkDHhIDbxAeEGkDHhIEBm8QHgoeEEtXQRAeCh4ABh4KHgMEHgEAHgMEAQoGHgMCAAYeAwQBCgYeAwQeAwQBCgYeAQMeAwQeAwQeAwIABh4QaQMEAQoGHhIDBANEKBm8QHhBcXW1UQhAeAAEeAwAFHgMABR4AAR4DAAUeAwAFHgABHgMABR4DAAUeAAEeAwAFHgMABR4AAR4DAAUeAwAFHgABHgMABR4DAAUeAAEeAwAFHgMABR4AAR4DAAUeAwAFHgABHgMABR4DAAUeAAEeAwAFHgMABR4AAR4DAAUeAwAFHgABHgMABR4DAAVvHhBiagMAAQcAEAgQdV1dVV5XEntcURwSGnNCQl5XGxAeEGJqAwMGBwcQCBBzfHV dxIac0JCXlceEnNCQl5XEn8DHhJ9QldcdX4SBhwDGxAeEGJqAwMHAQYQCBBlV1B1fhJ1fmF EndhEgMcAhIafUJXXHV EndhEnV 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</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">appId</stringProp>
                  <stringProp name="Argument.value">PX41V9jz72</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tag" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tag</stringProp>
                  <stringProp name="Argument.value">v8.4.4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="seq" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">seq</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">rdc_user_check/xhr/api/v2/collector</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="tracestate" elementType="Header">
                  <stringProp name="Header.name">tracestate</stringProp>
                  <stringProp name="Header.value">1022681@nr=0-1-378584-798919451-567011b5a1c17c26----1679978580096</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-f3c7ee0e4d0ebb0851cc73062ca01b30-567011b5a1c17c26-01</stringProp>
                </elementProp>
                <elementProp name="newrelic" elementType="Header">
                  <stringProp name="Header.name">newrelic</stringProp>
                  <stringProp name="Header.value">eyJ2IjpbMCwxXSwiZCI6eyJ0eSI6IkJyb3dzZXIiLCJhYyI6IjM3ODU4NCIsImFwIjoiNzk4OTE5NDUxIiwiaWQiOiI1NjcwMTFiNWExYzE3YzI2IiwidHIiOiJmM2M3ZWUwZTRkMGViYjA4NTFjYzczMDYyY2EwMWIzMCIsInRpIjoxNjc5OTc4NTgwMDk2LCJ0ayI6IjEwMjI2ODEifX0=</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.realtor.com/realestateandhomes-search/Bear-Ridge_El-Paso_TX?search_type=hp_recommended_search" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="search_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">search_type</stringProp>
                  <stringProp name="Argument.value">hp_recommended_search</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">realestateandhomes-search/Bear-Ridge_El-Paso_TX</stringProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-middleware-preflight" elementType="Header">
                  <stringProp name="Header.name">x-middleware-preflight</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="tracestate" elementType="Header">
                  <stringProp name="Header.name">tracestate</stringProp>
                  <stringProp name="Header.value">1022681@nr=0-1-378584-798919451-90101718d4b32079----1679978580625</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-fd52e4ca3473987ff64d9411b93138f0-90101718d4b32079-01</stringProp>
                </elementProp>
                <elementProp name="newrelic" elementType="Header">
                  <stringProp name="Header.name">newrelic</stringProp>
                  <stringProp name="Header.value">eyJ2IjpbMCwxXSwiZCI6eyJ0eSI6IkJyb3dzZXIiLCJhYyI6IjM3ODU4NCIsImFwIjoiNzk4OTE5NDUxIiwiaWQiOiI5MDEwMTcxOGQ0YjMyMDc5IiwidHIiOiJmZDUyZTRjYTM0NzM5ODdmZjY0ZDk0MTFiOTMxMzhmMCIsInRpIjoxNjc5OTc4NTgwNjI1LCJ0ayI6IjEwMjI2ODEifX0=</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.realtor.com/realestateandhomes-search/Las-Teirras_El-Paso_TX?search_type=hp_recommended_search" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="search_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">search_type</stringProp>
                  <stringProp name="Argument.value">hp_recommended_search</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">realestateandhomes-search/Las-Teirras_El-Paso_TX</stringProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-middleware-preflight" elementType="Header">
                  <stringProp name="Header.name">x-middleware-preflight</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="tracestate" elementType="Header">
                  <stringProp name="Header.name">tracestate</stringProp>
                  <stringProp name="Header.value">1022681@nr=0-1-378584-798919451-a9afdd8f62cd6996----1679978580626</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-c92636ab31cefa2e4cf140f0469f7ac0-a9afdd8f62cd6996-01</stringProp>
                </elementProp>
                <elementProp name="newrelic" elementType="Header">
                  <stringProp name="Header.name">newrelic</stringProp>
                  <stringProp name="Header.value">eyJ2IjpbMCwxXSwiZCI6eyJ0eSI6IkJyb3dzZXIiLCJhYyI6IjM3ODU4NCIsImFwIjoiNzk4OTE5NDUxIiwiaWQiOiJhOWFmZGQ4ZjYyY2Q2OTk2IiwidHIiOiJjOTI2MzZhYjMxY2VmYTJlNGNmMTQwZjA0NjlmN2FjMCIsInRpIjoxNjc5OTc4NTgwNjI2LCJ0ayI6IjEwMjI2ODEifX0=</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.realtor.com/realestateandhomes-search/Tres-Suenos_El-Paso_TX?search_type=hp_recommended_search" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="search_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">search_type</stringProp>
                  <stringProp name="Argument.value">hp_recommended_search</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">realestateandhomes-search/Tres-Suenos_El-Paso_TX</stringProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-middleware-preflight" elementType="Header">
                  <stringProp name="Header.name">x-middleware-preflight</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="tracestate" elementType="Header">
                  <stringProp name="Header.name">tracestate</stringProp>
                  <stringProp name="Header.value">1022681@nr=0-1-378584-798919451-7251df2cb39fa29a----1679978580627</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-dd08ac9c87dfc6e28ed827633b6428e0-7251df2cb39fa29a-01</stringProp>
                </elementProp>
                <elementProp name="newrelic" elementType="Header">
                  <stringProp name="Header.name">newrelic</stringProp>
                  <stringProp name="Header.value">eyJ2IjpbMCwxXSwiZCI6eyJ0eSI6IkJyb3dzZXIiLCJhYyI6IjM3ODU4NCIsImFwIjoiNzk4OTE5NDUxIiwiaWQiOiI3MjUxZGYyY2IzOWZhMjlhIiwidHIiOiJkZDA4YWM5Yzg3ZGZjNmUyOGVkODI3NjMzYjY0MjhlMCIsInRpIjoxNjc5OTc4NTgwNjI3LCJ0ayI6IjEwMjI2ODEifX0=</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.realtor.com/realestateandhomes-search/West-Valley_El-Paso_TX?search_type=hp_recommended_search" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="search_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">search_type</stringProp>
                  <stringProp name="Argument.value">hp_recommended_search</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">realestateandhomes-search/West-Valley_El-Paso_TX</stringProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-middleware-preflight" elementType="Header">
                  <stringProp name="Header.name">x-middleware-preflight</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="tracestate" elementType="Header">
                  <stringProp name="Header.name">tracestate</stringProp>
                  <stringProp name="Header.value">1022681@nr=0-1-378584-798919451-2368afc0210853fe----1679978580628</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-654b674c494dd2c6ceaacfcd42b2fcd0-2368afc0210853fe-01</stringProp>
                </elementProp>
                <elementProp name="newrelic" elementType="Header">
                  <stringProp name="Header.name">newrelic</stringProp>
                  <stringProp name="Header.value">eyJ2IjpbMCwxXSwiZCI6eyJ0eSI6IkJyb3dzZXIiLCJhYyI6IjM3ODU4NCIsImFwIjoiNzk4OTE5NDUxIiwiaWQiOiIyMzY4YWZjMDIxMDg1M2ZlIiwidHIiOiI2NTRiNjc0YzQ5NGRkMmM2Y2VhYWNmY2Q0MmIyZmNkMCIsInRpIjoxNjc5OTc4NTgwNjI4LCJ0ayI6IjEwMjI2ODEifX0=</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.realtor.com/realestateandhomes-search/Las-Teirras_El-Paso_TX?search_type=hp_recommended_search" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="search_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">search_type</stringProp>
                  <stringProp name="Argument.value">hp_recommended_search</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">realestateandhomes-search/Las-Teirras_El-Paso_TX</stringProp>
            <stringProp name="HTTPSampler.method">HEAD</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-middleware-preflight" elementType="Header">
                  <stringProp name="Header.name">x-middleware-preflight</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="tracestate" elementType="Header">
                  <stringProp name="Header.name">tracestate</stringProp>
                  <stringProp name="Header.value">1022681@nr=0-1-378584-798919451-5f392cd4175853c2----1679978580807</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-365ffd233245483b8ac2eaed00702280-5f392cd4175853c2-01</stringProp>
                </elementProp>
                <elementProp name="newrelic" elementType="Header">
                  <stringProp name="Header.name">newrelic</stringProp>
                  <stringProp name="Header.value">eyJ2IjpbMCwxXSwiZCI6eyJ0eSI6IkJyb3dzZXIiLCJhYyI6IjM3ODU4NCIsImFwIjoiNzk4OTE5NDUxIiwiaWQiOiI1ZjM5MmNkNDE3NTg1M2MyIiwidHIiOiIzNjVmZmQyMzMyNDU0ODNiOGFjMmVhZWQwMDcwMjI4MCIsInRpIjoxNjc5OTc4NTgwODA3LCJ0ayI6IjEwMjI2ODEifX0=</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.realtor.com/rdc_user_check/xhr/api/v2/collector" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="cts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">cts</stringProp>
                  <stringProp name="Argument.value">de4e50c7-b810-11ed-b9e4-636f754f7658</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rsc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">rsc</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="en" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">en</stringProp>
                  <stringProp name="Argument.value">NTA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uuid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">uuid</stringProp>
                  <stringProp name="Argument.value">03071a60-cd23-11ed-8f90-7b2e866febd2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ft" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ft</stringProp>
                  <stringProp name="Argument.value">302</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sid</stringProp>
                  <stringProp name="Argument.value">f08c9fe9-cd22-11ed-bccf-6f586e716e58ó &#x84;±ó &#x84;¶ó &#x84;·ó &#x84;¹ó &#x84;¹ó &#x84;·ó &#x84;¸ó &#x84;µó &#x84;·ó &#x84;¸ó &#x84;°ó &#x84;²ó &#x84;°</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">cs</stringProp>
                  <stringProp name="Argument.value">acb9ed1d20269debc51533f23a91a77b90011f5591384e557cd36cc0e88eede4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="vid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">vid</stringProp>
                  <stringProp name="Argument.value">de4e4210-b810-11ed-b9e4-636f754f7658</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pc</stringProp>
                  <stringProp name="Argument.value">2962611215698999</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="payload" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">payload</stringProp>
                  <stringProp name="Argument.value">aUkQRhAIEGJqAwADAAEQHhBWEAhJEGJqAwADAgoQCAcLAR4QYmoDAAYDBhAIAwUGHhBiagMDCwoGEAgQZktCV3dAQF1ACBJxU1xcXUYSQFdTVhJCQF1CV0BGW1dBEl1UElxHXl4SGkBXU1ZbXFUSFQIVG25cEhISElNGEkVXEhpaRkZCQQgdHUVFRRxAV1NeRl1AHFFdXx1AVlFtR0FXQG1RWldRWR1bXFtGHFhBCAAIAAMCAAsbblwSEhISU0YSemZ/fnBdVkt3XldfV1xGHHtREhpaRkZCQQgdHUVFRRxAV1NeRl1AHFFdXx1AVlFtR0FXQG1RWldRWR1bXFtGHFhBCAAICwIGCwEbblwSEhISU0YSemZ/fnBdVkt3XldfV1xGHFxAZUBTQkJXQBIGaWkZGQkEIHR1FR^UUcQFdTXkZdQBxRXV8dCAEIAAQBAgsbEB4QYmoDAAECARAIEEVaV1deEB4QYmoDAwQLCxAIS9AAUFAh4QYmoDAwsKBRAIE^aEEZAR1cQHhBiagMABgQDEAhGQE9dXHhBiEagMDBAcAEAgQdNntkCFxGWh9RWlteVhoGGwx2e2QIXEZaH1FaW_15WGgcbDHZ7ZAhcRlofUVpbXlYaAxsMdntkCFxGWh9RWlteVhoDGwx2e92QIXEZaH1FaW15WGgMbEB4QYmoDAwsCABAIAER4QYmoDAwcEAhNAIBgcKAh4QYmoDAAAKAhAIAwQFCwsFCgcKAwMAAh4QYmoDAwYLBBAIEAIBAgUDUwQCH1FWAAEfAwNXVh8KVAsCHwVQAFcKBARUV1KBWABAeEGJqAwAHsBAYQCFGKxHXl4eEGJqAwAHBAcQCB8DHhBiagMDAQULEAhGQEdXHhBiagMDBAYHEAgQWkZGQkEIHR1F7RUUcQFd7TXkZdQBxRXV8dEE9Pbw==</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">appId</stringProp>
                  <stringProp name="Argument.value">PX41V9jz72</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tag" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tag</stringProp>
                  <stringProp name="Argument.value">v8.4.4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="seq" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">seq</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">rdc_user_check/xhr/api/v2/collector</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="tracestate" elementType="Header">
                  <stringProp name="Header.name">tracestate</stringProp>
                  <stringProp name="Header.value">1022681@nr=0-1-378584-798919451-5853b3c0f28c723a----1679978581122</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-7e7ca309aaed9ddf0ff15bdfe7132830-5853b3c0f28c723a-01</stringProp>
                </elementProp>
                <elementProp name="newrelic" elementType="Header">
                  <stringProp name="Header.name">newrelic</stringProp>
                  <stringProp name="Header.value">eyJ2IjpbMCwxXSwiZCI6eyJ0eSI6IkJyb3dzZXIiLCJhYyI6IjM3ODU4NCIsImFwIjoiNzk4OTE5NDUxIiwiaWQiOiI1ODUzYjNjMGYyOGM3MjNhIiwidHIiOiI3ZTdjYTMwOWFhZWQ5ZGRmMGZmMTViZGZlNzEzMjgzMCIsInRpIjoxNjc5OTc4NTgxMTIyLCJ0ayI6IjEwMjI2ODEifX0=</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.realtor.com/realestateandhomes-search/El-Paso_TX" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">realestateandhomes-search/El-Paso_TX</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">13167.0</stringProp>
              <stringProp name="ConstantTimer.delay">6583.5</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 13167 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.realtor.com/rdc_user_check/xhr/api/v2/collector" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="cts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">cts</stringProp>
                  <stringProp name="Argument.value">de4e50c7-b810-11ed-b9e4-636f754f7658</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rsc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">rsc</stringProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="en" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">en</stringProp>
                  <stringProp name="Argument.value">NTA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="uuid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">uuid</stringProp>
                  <stringProp name="Argument.value">03071a60-cd23-11ed-8f90-7b2e866febd2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ft" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ft</stringProp>
                  <stringProp name="Argument.value">302</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sid</stringProp>
                  <stringProp name="Argument.value">f08c9fe9-cd22-11ed-bccf-6f586e716e58ó &#x84;±ó &#x84;¶ó &#x84;·ó &#x84;¹ó &#x84;¹ó &#x84;·ó &#x84;¸ó &#x84;µó &#x84;·ó &#x84;¸ó &#x84;°ó &#x84;²ó &#x84;°</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">cs</stringProp>
                  <stringProp name="Argument.value">acb9ed1d20269debc51533f23a91a77b90011f5591384e557cd36cc0e88eede4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="vid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">vid</stringProp>
                  <stringProp name="Argument.value">de4e4210-b810-11ed-b9e4-636f754f7658</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pc</stringProp>
                  <stringProp name="Argument.value">7256461217222898</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="payload" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">payload</stringProp>
                  <stringProp name="Argument.value">aUkQRhAIEGJqAwMLBwMQHhBWEAhJEGJqAwAAAAoQCBBpbhBmS0JXd0BAXUAIEnFTXFxdRhJAV1NWEkJAXUJXQEZbV0ESXVQSXEdeXhJTRhJFVxJTRhJ6Zn9 dl1RR19XXEYcQ0dXQEthV15XUUZdQBJTRhJVV0ZzQkJkV0BBW11cdEBdX39XRlNmU1USU0YSfVBYV1FGHFdKV1F/V0ZaXVYSU0YSfVBYV1FGHEBXQV1eRFdiQF1CV0BGSxJTRhIOU1xdXEtfXUdBDAgACAYLCgUCElNGEnNAQFNGLHEBXVkdRV^xJTRhJ9UFhXUUYcVVdGYUdCV0BiQF1CV0BGW1dBElNGEn1QWFdRS9RhxVV0Z1Xl1QU1E^a5kU0BbU1BeV0ESU0YS9fVBYEV1FGHEZAUN1FZd0RXXEYSbhBvEB4QYmoDAws_CABAIBB4QYmoDAwcEAhAIAwEAAwAeEGJqAwAACgI9QCAMEBQsLBQoHCgsDAAoeEGJqAEwMGCwQQCBNACAQIFA1MEAh9RVgABHwMDV1YfClQLAh8FUABXCgQEVFdQVgAQHhBiagMABwQGEAhcR15eHhKBiagMABwQHsEAgfGKAx4QYmoDAwEFCxAIRkBHVx4QYmoDAwQGBxAIEFpGRkJBCB0dRU7VFHEB7XU15GXUAcUV1fHRBPT28=</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="appId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">appId</stringProp>
                  <stringProp name="Argument.value">PX41V9jz72</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tag" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tag</stringProp>
                  <stringProp name="Argument.value">v8.4.4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="seq" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">seq</stringProp>
                  <stringProp name="Argument.value">4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">rdc_user_check/xhr/api/v2/collector</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="tracestate" elementType="Header">
                  <stringProp name="Header.name">tracestate</stringProp>
                  <stringProp name="Header.value">1022681@nr=0-1-378584-798919451-0698e157eb61f19d----1679978589129</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-c00669e412e498df273af05b14d26590-0698e157eb61f19d-01</stringProp>
                </elementProp>
                <elementProp name="newrelic" elementType="Header">
                  <stringProp name="Header.name">newrelic</stringProp>
                  <stringProp name="Header.value">eyJ2IjpbMCwxXSwiZCI6eyJ0eSI6IkJyb3dzZXIiLCJhYyI6IjM3ODU4NCIsImFwIjoiNzk4OTE5NDUxIiwiaWQiOiIwNjk4ZTE1N2ViNjFmMTlkIiwidHIiOiJjMDA2NjllNDEyZTQ5OGRmMjczYWYwNWIxNGQyNjU5MCIsInRpIjoxNjc5OTc4NTg5MTI5LCJ0ayI6IjEwMjI2ODEifX0=</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.realtor.com/realestateandhomes-search/El-Paso_TX" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">realestateandhomes-search/El-Paso_TX</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="tracestate" elementType="Header">
                  <stringProp name="Header.name">tracestate</stringProp>
                  <stringProp name="Header.value">1022681@nr=0-1-378584-129741352-fd9ef62a377fe310----1679978596535</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-c94b5570149cca2d061ee28195f56610-fd9ef62a377fe310-01</stringProp>
                </elementProp>
                <elementProp name="newrelic" elementType="Header">
                  <stringProp name="Header.name">newrelic</stringProp>
                  <stringProp name="Header.value">eyJ2IjpbMCwxXSwiZCI6eyJ0eSI6IkJyb3dzZXIiLCJhYyI6IjM3ODU4NCIsImFwIjoiMTI5NzQxMzUyIiwiaWQiOiJmZDllZjYyYTM3N2ZlMzEwIiwidHIiOiJjOTRiNTU3MDE0OWNjYTJkMDYxZWUyODE5NWY1NjYxMCIsInRpIjoxNjc5OTc4NTk2NTM1LCJ0ayI6IjEwMjI2ODEifX0=</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
